{"mappings":"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","sources":["src/js/fetch-search-result.js","src/js/fetch-category.js","src/js/markup-top-books.js","src/js/book-category.js","src/js/markup-category-list.js"],"sourcesContent":["const BASE_URl = 'https://books-backend.p.goit.global/books/';\n\nexport async function fetchSearchResult(requestTheme) {\n  const response = await fetch(`${BASE_URl}${requestTheme}`);\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  const arrayElements = await response.json();\n\n  return arrayElements;\n}\n","const BASE_URl = 'https://books-backend.p.goit.global/books/category?category=';\n\nexport async function fetchCategoryList(requestTheme) {\n  const response = await fetch(`${BASE_URl}${requestTheme}`);\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  const category = await response.json();\n\n  return category;\n}\n","import { fetchSearchResult } from './fetch-search-result';\nimport { fetchCategoryList } from './fetch-category';\n// import { createMarkupBooks } from './book-category';\n\nconst refs = {\n  booksCardsList: document.querySelector('.books-cards__list'),\n  booksCardsTitle: document.querySelector('.books-cards__title'),\n  topBooksCategories: null,\n  booksCardsButton: null,\n};\n\nrefs.booksCardsList.addEventListener('click', onClickSeeMore);\n\nfetchSearchResult('top-books')\n  .then(categoriesTopBooks => {\n    console.log(refs.booksCardsList);\n    allCategoryMarkup(categoriesTopBooks);\n  })\n  .catch(() => {\n    console.log('Проблема з запитом!');\n  });\n\nexport function allCategoryMarkup(categoriesTopBooks) {\n  refs.booksCardsList.innerHTML = '';\n  refs.booksCardsTitle.textContent = 'Best Sellers Books';\n\n  createCategoriesTopBooksMarkup(categoriesTopBooks);\n\n  refs.topBooksCategories = document.querySelectorAll('.top-books-categories');\n  refs.booksCardsButton = document.querySelector('.books-cards__button');\n\n  createTopBooksMarkup(categoriesTopBooks);\n}\n\nfunction createTopBooksMarkup(categoriesTopBooks) {\n  let numberCategories = 0;\n\n  console.log(categoriesTopBooks[numberCategories].books);\n\n  refs.topBooksCategories.forEach(element => {\n    const markup = categoriesTopBooks[numberCategories].books\n      .map(({ book_image, title, author }) => {\n        return `\n          <li>\n          <img src=\"${book_image}\" alt=\"${title}\">\n          <h2>${title}</h2>\n          <p>${author}</p>\n          </li>`;\n      })\n      .join('');\n    element.insertAdjacentHTML('beforeend', markup);\n    numberCategories++;\n  });\n}\n\nfunction createCategoriesTopBooksMarkup(categories) {\n  const markup = categories\n    .map(\n      ({ list_name }) => `\n    <li class=\"books-cards__item\">\n    <h2 class=\"top-books-title\">${list_name}</h2>\n    <ul class=\"top-books-categories\">\n                \n    </ul>\n    <button class=\"books-cards__button\" data-list_name=\"${list_name}\">See More</button>\n    </li>\n    `\n    )\n    .join('');\n\n  refs.booksCardsList.insertAdjacentHTML('beforeend', markup);\n}\n\nasync function onClickSeeMore(evt) {\n  evt.preventDefault();\n\n  if (!evt.target.classList.contains('books-cards__button')) {\n    console.log('Ти натиснув не на кнопку.');\n    return;\n  }\n  console.log('Ти натиснув на кнопку.');\n  const category = evt.target.dataset.list_name;\n  refs.booksCardsTitle.textContent = category;\n  refs.booksCardsList.innerHTML = '';\n  const categoryItem = await fetchCategoryList(category);\n  createMarkupBooks(categoryItem);\n}\n\nfunction createMarkupBooks(category) {\n  const markup = category\n    .map(item => {\n      const { book_image, title, author } = item;\n      return `\n    <li>\n    <img src=\"${book_image}\" alt=\"${title}\">\n    <h2>${title}</h2>\n    <p>${author}</p>\n    </li>`;\n    })\n    .join('');\n  refs.booksCardsList.insertAdjacentHTML('beforeend', markup);\n}\n","import { fetchCategoryList } from './fetch-category';\n\nconst listCategory = document.querySelector('.list-categories');\nconst bookSection = document.querySelector('.books-cards__list');\nconst sectionTitle = document.querySelector('.books-cards__title');\n\nlistCategory.addEventListener('click', onClickCategory);\n\nasync function onClickCategory(evt) {\n  evt.preventDefault();\n  if (!evt.target.classList.contains('category__link')) {\n    return;\n  }\n  removeCurrentClass();\n  bookSection.innerHTML = '';\n  const category = evt.target.textContent;\n  evt.target.classList.add('current-category');\n  sectionTitle.textContent = category;\n  const categoryItem = await fetchCategoryList(category);\n  createMarkupBooks(categoryItem);\n}\n\nfunction removeCurrentClass() {\n  const allCategory = document.querySelectorAll('.category__link');\n  allCategory.forEach(category => {\n    category.classList.remove('current-category');\n  });\n}\n\nfunction createMarkupBooks(category) {\n  const markup = category\n    .map(item => {\n      const { book_image, title, author } = item;\n      return `\n    <li>\n    <img src=\"${book_image}\" alt=\"${title}\">\n    <h2>${title}</h2>\n    <p>${author}</p>\n    </li>`;\n    })\n    .join('');\n  bookSection.insertAdjacentHTML('beforeend', markup);\n}\n","import { fetchSearchResult } from './fetch-search-result';\n\nconst listCategory = document.querySelector('.list-categories');\n\nfunction getMarkupAllCategory() {\n  const markup =\n    '<li><a href=\"./index.html\" class=\"category__link\">All category</a></li>';\n  listCategory.insertAdjacentHTML('afterbegin', markup);\n}\n\ngetMarkupAllCategory();\n\nasync function getMarkupCategoryList() {\n  const categoryList = await fetchSearchResult('category-list');\n  const categoryArr = [];\n  for (const { list_name } of categoryList) {\n    categoryArr.push(list_name);\n  }\n  console.log(categoryArr);\n  const markup = categoryArr\n    .sort((a, b) => a.localeCompare(b))\n    .map(\n      item =>\n        `<li class=\"category__item\"><a href=\"\" class=\"category__link\">${item}</a></li>`\n    )\n    .join('');\n  listCategory.insertAdjacentHTML('beforeend', markup);\n}\n\ngetMarkupCategoryList();\n"],"names":["async","$f7f0770515855920$export$8c2dda8bf3bd2faf","requestTheme","response","fetch","ok","Error","status","json","$f49a6fd6e2af787b$export$733bdd6f03c986d2","$d0d414804acfff59$var$refs","booksCardsList","document","querySelector","booksCardsTitle","topBooksCategories","booksCardsButton","addEventListener","evt","preventDefault","target","classList","contains","console","log","category","dataset","list_name","textContent","innerHTML","markup","map","item","book_image","title","author","join","insertAdjacentHTML","$d0d414804acfff59$var$createMarkupBooks","then","categoriesTopBooks","categories","$d0d414804acfff59$var$createCategoriesTopBooksMarkup","querySelectorAll","numberCategories","books","forEach","element","$d0d414804acfff59$var$createTopBooksMarkup","$d0d414804acfff59$export$2cce87bcf2cc71f0","catch","$46ea6eb8fd8011f2$var$listCategory","$46ea6eb8fd8011f2$var$bookSection","$46ea6eb8fd8011f2$var$sectionTitle","remove","add","$46ea6eb8fd8011f2$var$createMarkupBooks","$2175d1d76e4e8147$var$listCategory","categoryList","categoryArr","push","sort","a","b","localeCompare","$2175d1d76e4e8147$var$getMarkupCategoryList"],"version":3,"file":"index.07407d06.js.map"}