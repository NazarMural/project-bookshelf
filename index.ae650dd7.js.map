{"mappings":"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","sources":["src/js/fetch-search-result.js","src/js/fetch-category.js","src/js/book-category.js","src/js/markup-top-books.js","src/js/markup-category-list.js"],"sourcesContent":["const BASE_URl = 'https://books-backend.p.goit.global/books/';\n\nexport async function fetchSearchResult(requestTheme) {\n  const response = await fetch(`${BASE_URl}${requestTheme}`);\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  const arrayElements = await response.json();\n\n  return arrayElements;\n}\n","const BASE_URl = 'https://books-backend.p.goit.global/books/category?category=';\n\nexport async function fetchCategoryList(requestTheme) {\n  const response = await fetch(`${BASE_URl}${requestTheme}`);\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  const category = await response.json();\n\n  return category;\n}\n","import { fetchCategoryList } from './fetch-category';\n\nconst listCategory = document.querySelector('.list-categories');\nconst bookSection = document.querySelector('.books-cards__list');\nconst sectionTitle = document.querySelector('.books-cards__title');\n\nlistCategory.addEventListener('click', onClickCategory);\n\nasync function onClickCategory(evt) {\n  bookSection.classList.add('category-books-list');\n  evt.preventDefault();\n  if (evt.target.classList.contains('category__link')) {\n    removeCurrentClass();\n    bookSection.innerHTML = '';\n    const category = evt.target.textContent;\n    evt.target.classList.add('current-category');\n    sectionTitle.textContent = category;\n    const categoryItem = await fetchCategoryList(category);\n    createMarkupBooks(categoryItem);\n  }\n  // if (evt.target.classList.contains('category__link-all')) {\n  // }\n}\n\nfunction removeCurrentClass() {\n  const allCategory = document.querySelectorAll('.category__link');\n  allCategory.forEach(category => {\n    category.classList.remove('current-category');\n  });\n}\n\nfunction createMarkupBooks(category) {\n  const markup = category\n    .map(item => {\n      const { _id, book_image, title, author } = item;\n      return `\n    <li data-id=\"${_id}\" class=\"category-books__item\">\n    <img src=\"${book_image}\" alt=\"${title}\" class=\"category-books__img\">\n    <h2 class=\"category-books__title\">${title}</h2>\n    <p class=\"category-books__author\">${author}</p>\n    </li>`;\n    })\n    .join('');\n  bookSection.insertAdjacentHTML('beforeend', markup);\n}\n\nexport {createMarkupBooks}\n// const categoryTitle = evt.target.textContent\n// .split(' ')\n// .map((item, _, arr) => {\n//   if (item === arr[arr.length - 1]) {\n//     console.log(item);\n//     // item.style.color = '#4F2EE8';\n//   }\n//   return item;\n// })\n// .join(' ');\n\n// console.log(categoryTitle);\n","import { fetchSearchResult } from './fetch-search-result';\nimport { fetchCategoryList } from './fetch-category';\nimport { createMarkupBooks } from './book-category';\n\nconst refs = {\n  booksCardsList: document.querySelector('.books-cards__list'),\n  booksCardsTitle: document.querySelector('.books-cards__title'),\n  topBooksCategories: null,\n  booksCardsButton: null,\n};\n\nrefs.booksCardsList.addEventListener('click', onClickSeeMore);\n\nallCategoryMarkup();\n\nexport function allCategoryMarkup() {\n  fetchSearchResult('top-books')\n    .then(categoriesTopBooks => {\n      console.log(refs.booksCardsList);\n\n      refs.booksCardsList.classList.remove('category-books-list');\n      refs.booksCardsList.classList.add('top-books-list');\n\n      refs.booksCardsList.innerHTML = '';\n      refs.booksCardsTitle.textContent = 'Best Sellers Books';\n\n      createCategoriesTopBooksMarkup(categoriesTopBooks);\n\n      refs.topBooksCategories = document.querySelectorAll(\n        '.top-books-categories'\n      );\n      refs.booksCardsButton = document.querySelector('.books-cards__button');\n\n      createTopBooksMarkup(categoriesTopBooks);\n    })\n    .catch(() => {\n      console.log('Проблема з запитом!');\n    });\n}\n\nfunction createTopBooksMarkup(categoriesTopBooks) {\n  let numberCategories = 0;\n\n  console.log(categoriesTopBooks[numberCategories].books);\n\n  refs.topBooksCategories.forEach(element => {\n    const markup = categoriesTopBooks[numberCategories].books\n      .map(({ book_image, title, author }) => {\n        return `\n          <li>\n          <img src=\"${book_image}\" alt=\"${title}\">\n          <h2>${title}</h2>\n          <p>${author}</p>\n          </li>`;\n      })\n      .join('');\n    element.insertAdjacentHTML('beforeend', markup);\n    numberCategories++;\n  });\n}\n\nfunction createCategoriesTopBooksMarkup(categories) {\n  const markup = categories\n    .map(\n      ({ list_name }) => `\n    <li class=\"books-cards__item\">\n    <h2 class=\"top-books-title\">${list_name}</h2>\n    <ul class=\"top-books-categories\">\n                \n    </ul>\n    <button class=\"books-cards__button\" data-list_name=\"${list_name}\">See More</button>\n    </li>\n    `\n    )\n    .join('');\n\n  refs.booksCardsList.insertAdjacentHTML('beforeend', markup);\n}\n\nasync function onClickSeeMore(evt) {\n  evt.preventDefault();\n\n  if (!evt.target.classList.contains('books-cards__button')) {\n    console.log('Ти натиснув не на кнопку.');\n    return;\n  }\n  console.log('Ти натиснув на кнопку.');\n  refs.booksCardsList.classList.add('category-books-list');\n  const category = evt.target.dataset.list_name;\n  refs.booksCardsTitle.textContent = category;\n  refs.booksCardsList.innerHTML = '';\n  const categoryItem = await fetchCategoryList(category);\n  createMarkupBooks(categoryItem);\n}\n","import { fetchSearchResult } from './fetch-search-result';\n\nconst listCategory = document.querySelector('.list-categories');\n\nfunction getMarkupAllCategory() {\n  const markup =\n    '<li><a href=\"./index.html\" class=\"category__link-all\">All category</a></li>';\n  listCategory.insertAdjacentHTML('afterbegin', markup);\n}\n\ngetMarkupAllCategory();\n\nasync function getMarkupCategoryList() {\n  const categoryList = await fetchSearchResult('category-list');\n  const categoryArr = [];\n  for (const { list_name } of categoryList) {\n    categoryArr.push(list_name);\n  }\n  console.log(categoryArr);\n  const markup = categoryArr\n    .sort((a, b) => a.localeCompare(b))\n    .map(\n      item =>\n        `<li class=\"category__item\"><a href=\"\" class=\"category__link\">${item}</a></li>`\n    )\n    .join('');\n  listCategory.insertAdjacentHTML('beforeend', markup);\n}\n\ngetMarkupCategoryList();\n// export { getMarkupCategoryList };\n"],"names":["async","$f7f0770515855920$export$8c2dda8bf3bd2faf","requestTheme","response","fetch","ok","Error","status","json","$f49a6fd6e2af787b$export$733bdd6f03c986d2","$46ea6eb8fd8011f2$var$listCategory","document","querySelector","$46ea6eb8fd8011f2$var$bookSection","$46ea6eb8fd8011f2$var$sectionTitle","$46ea6eb8fd8011f2$export$2e6862ff7870b9bb","category","markup","map","item","_id","book_image","title","author","join","insertAdjacentHTML","addEventListener","evt","classList","add","preventDefault","target","contains","querySelectorAll","forEach","remove","innerHTML","textContent","$d0d414804acfff59$var$refs","booksCardsList","booksCardsTitle","topBooksCategories","booksCardsButton","console","log","dataset","list_name","then","categoriesTopBooks","categories","$d0d414804acfff59$var$createCategoriesTopBooksMarkup","numberCategories","books","element","$d0d414804acfff59$var$createTopBooksMarkup","catch","$2175d1d76e4e8147$var$listCategory","categoryList","categoryArr","push","sort","a","b","localeCompare","$2175d1d76e4e8147$var$getMarkupCategoryList"],"version":3,"file":"index.ae650dd7.js.map"}